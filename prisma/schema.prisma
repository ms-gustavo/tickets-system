
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  USER
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password String
  role ROLE
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Purchase Purchase[]
}

model UserTemp {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password String
  role ROLE
  confirmId String @unique
  createdAt DateTime @default(now())
}

model Event {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  date DateTime
  location String
  createdBy String
  tickets Ticket[]
  promotions Promotion[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Purchase Purchase[]
}

model Ticket {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  price Float
  amount Int
  event Event @relation(fields: [eventId], references: [id])
  eventId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Purchase Purchase[]
}

model Promotion {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  code String
  discount Float
  expirationDate DateTime
  isActive Boolean @default(true)
  event Event @relation(fields: [eventId], references: [id])
  eventId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Purchase {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  eventId String @db.ObjectId
  event Event @relation(fields: [eventId], references: [id])
  ticketId String @db.ObjectId
  ticket Ticket @relation(fields: [ticketId], references: [id])
  quantity Int
  totalPrice Float
  discount Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}